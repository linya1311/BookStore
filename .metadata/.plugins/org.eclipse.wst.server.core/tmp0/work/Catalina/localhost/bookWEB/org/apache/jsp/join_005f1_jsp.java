/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.34
 * Generated at: 2019-06-23 17:06:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_005f1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>會員條款</title>\r\n");
      out.write("<link rel=stylesheet type=\"text/css\" href=\"skin/font.css\">\r\n");
      out.write("<link rel=stylesheet type=\"text/css\" href=\"skin/windows.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"bg\">\r\n");
      out.write("\r\n");
      out.write("<table width=100% align=\"center\" height=1080 class=\"bg\">\r\n");
      out.write("<tr height=20%>\r\n");
      out.write("<td align=\"center\" valign=\"top\" colspan=\"3\" class=\"ba\">");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "title/open.jsp", out, false);
      out.write("\r\n");
      out.write(" \r\n");
      out.write("<tr height=\"70%\">\r\n");
      out.write("<td width=50% align=\"center\" valign=\"top\">\r\n");
      out.write("\r\n");
      out.write("<!-- 開始 -->\r\n");
      out.write("<table align=\"center\" style=border-style:solid; width=50%>\r\n");
      out.write("<tr><td class=\"B-xxl\" align=\"center\">\r\n");
      out.write("會員條款\r\n");
      out.write("<tr><td class=R style=text-align:center;>\r\n");
      out.write("(此為模擬畫面，以下文章是複製 google 服務條款)\r\n");
      out.write("<tr><td>\r\n");
      out.write("<div class=B-l>歡迎使用 Google！</div>\r\n");
      out.write("<p class=A-s>\r\n");
      out.write("感謝您使用我們的產品和服務 (以下簡稱「服務」)。「服務」是由 Google LLC (地址為 1600 Amphitheatre Parkway, Mountain View, CA 94043, United States) (以下簡稱「Google」) 提供。<br>\r\n");
      out.write("<br>\r\n");
      out.write("只要您使用「服務」，即表示您同意本條款，故請詳閱本條款內容。<br>\r\n");
      out.write("<br>\r\n");
      out.write("由於「服務」種類繁多，因此某些「服務」可能會有附加條款或產品規定 (包括年齡限制)。附加條款將與相關「服務」一併提供；當您使用該「服務」時，該等附加條款即成為您與我們所訂協議的一部分。<br>\r\n");
      out.write("<br>\r\n");
      out.write("</p>\r\n");
      out.write("<div class=B-l>使用「服務」</div>\r\n");
      out.write("<p class=A-s>\r\n");
      out.write("您必須遵守「服務」中向您提供的所有政策。<br>\r\n");
      out.write("<br>\r\n");
      out.write("請勿濫用「服務」。舉例來說，您不應干擾「服務」運作，亦不得試圖透過我們所提供的介面和操作說明以外的方法存取「服務」。您僅可於法律 (包括適用的出口及再出口管制法律和法規) 允許範圍內使用「服務」。如果您未遵守我們的條款或政策，或是如果我們正在調查疑似違規行為，我們可能會暫停或終止向您提供「服務」。<br>\r\n");
      out.write("<br>\r\n");
      out.write("使用「服務」並不會將「服務」或您所存取內容的任何智慧財產權授予您。除非相關內容的擁有者同意或法律允許，否則您一律不得使用「服務」中的內容。本條款並未授權您可使用「服務」中所採用的任何品牌標示或標誌。請勿移除、遮蓋或變造「服務」所顯示或隨附顯示的任何法律聲明。<br>\r\n");
      out.write("<br>\r\n");
      out.write("「服務」中顯示的部分內容並非 Google 所有，這類內容應由其提供實體承擔全部責任。我們可對內容進行審查，以判斷其是否違法或違反 Google 政策，並可移除或拒絕顯示我們合理確信違反 我們政策或法律的內容。不過，這不表示我們一定會對內容進行審查，因此請勿如此認定。<br>\r\n");
      out.write("<br>\r\n");
      out.write("有關您對「服務」的使用，我們會向您發送服務公告、行政管理訊息和其他資訊；您可取消接收其中某些通訊內容。<br>\r\n");
      out.write("<br>\r\n");
      out.write("Google 的部分「服務」可以在行動裝置上使用。但請勿在會分散注意力的情況下使用這些「服務」，以免違反交通或安全法規。<br>\r\n");
      out.write("<br>\r\n");
      out.write("</p>\r\n");
      out.write("<div class=B-l>您的 Google 帳戶</div>\r\n");
      out.write("<p class=A-s>\r\n");
      out.write("您可能需有「Google 帳戶」才能使用我們的某些「服務」。您可自行建立「Google 帳戶」，或由管理人 (例如您的雇主或教育機構) 為您指派「Google 帳戶」。如果您使用的是管理人指派給您的「Google 帳戶」，可能需適用不同條款或附加條款，而且您的管理人可能可以存取或停用您的帳戶。<br>\r\n");
      out.write("<br>\r\n");
      out.write("為保護您的 Google 帳戶，請務必保管好您的密碼並對外保密。您必須為自己 Google 帳戶中的所有活動負責，因此請避免在第三方應用程式中重複使用您的 Google 帳戶密碼。如果您發現自己的 Google 帳戶或密碼遭人盜用，請按照這裡的指示操作。<br>\r\n");
      out.write("</p>\r\n");
      out.write("<tr>\r\n");
      out.write("<td align=\"center\">\r\n");
      out.write("</table>\r\n");
      out.write("<table width=50% align=\"center\">\r\n");
      out.write("<tr>\r\n");
      out.write("<td align=\"center\">\r\n");
      out.write("<input type=\"button\" value=\"同意\" onClick=\"window.location.href='http://localhost:8080/bookWEB/join_2.jsp';\" accesskey=\"Y\">\r\n");
      out.write("<input type=\"button\" value=\"不同意\" onClick=\"window.location.href='http://localhost:8080/bookWEB/index.jsp';\" accesskey=\"N\">\r\n");
      out.write("</table>\r\n");
      out.write("<!-- 結束 -->\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td align=\"center\" colspan=\"3\"  class=\"ba2\">");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "title/end.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
